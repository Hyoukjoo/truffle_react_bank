{"ast":null,"code":"import _regeneratorRuntime from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\src\\\\component\\\\Remit.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport '../css/Remit.css';\nimport { BANKS } from '../DB';\n\nvar Remit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Remit, _Component);\n\n  function Remit(props) {\n    var _this;\n\n    _classCallCheck(this, Remit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Remit).call(this, props));\n\n    _this._getBankList = function () {\n      return React.createElement(\"div\", {\n        className: \"bankListBack\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bankListDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, BANKS.map(function (bank) {\n        return React.createElement(\"div\", {\n          className: \"bankList\",\n          key: bank,\n          onClick: function onClick() {\n            return _this._selectBank(bank);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, bank));\n      })));\n    };\n\n    _this._selectBank = function (bank) {\n      _this.setState({\n        bank: bank,\n        isBankList: false\n      });\n\n      localStorage.setItem('bank', bank);\n    };\n\n    _this._submit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var bank, address, receiver;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              bank = _this.state.bank;\n              address = _this.addressInput.current.value;\n              _context.prev = 2;\n              _context.next = 5;\n              return _this.props.info.contract.checkAccount.call(bank, address, {\n                from: _this.props.info.accounts[0]\n              });\n\n            case 5:\n              receiver = _context.sent;\n              localStorage.setItem('receiver', receiver);\n              localStorage.setItem('receiverAddress', address);\n\n              _this.props.history.push('/entermoney/remit');\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[2, 11]]);\n    }));\n    _this.state = {\n      bank: '',\n      isBankList: false\n    };\n    _this.addressInput = React.createRef();\n    return _this;\n  }\n\n  _createClass(Remit, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          bank = _this$state.bank,\n          isBankList = _this$state.isBankList;\n      var _this$props = this.props,\n          redirect = _this$props.redirect,\n          logout = _this$props.logout;\n      var _getBankList = this._getBankList,\n          _submit = this._submit;\n      var isLogin = localStorage.getItem('isLogin');\n      return React.createElement(\"div\", {\n        className: \"remit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, isLogin !== \"true\" && redirect(), isBankList === true ? _getBankList() : '', React.createElement(\"div\", {\n        className: \"selectBank\",\n        onClick: function onClick() {\n          return _this2.setState({\n            isBankList: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, bank === '' ? '은행선택' : \"\".concat(bank))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: this.addressInput,\n        className: \"addressInput\",\n        placeholder: \"Input receiver wallet address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"submitDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"submitButton confirmButton\",\n        onClick: _submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"\\uD655 \\uC778\")), React.createElement(\"div\", {\n        className: \"submitButton cancelButton\",\n        onClick: logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"\\uCDE8 \\uC18C\"))));\n    }\n  }]);\n\n  return Remit;\n}(Component);\n\nexport default withRouter(Remit);","map":{"version":3,"sources":["c:\\Users\\judam\\Documents\\HJ\\dev\\truffle_react\\client\\src\\component\\Remit.js"],"names":["React","Component","withRouter","BANKS","Remit","props","_getBankList","map","bank","_selectBank","setState","isBankList","localStorage","setItem","_submit","state","address","addressInput","current","value","info","contract","checkAccount","call","from","accounts","receiver","history","push","console","log","createRef","redirect","logout","isLogin","getItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport '../css/Remit.css'\r\nimport { BANKS } from '../DB'\r\n\r\nclass Remit extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      bank : '',\r\n      isBankList : false\r\n    }\r\n\r\n    this.addressInput = React.createRef()\r\n  }\r\n  \r\n  _getBankList = () => {\r\n    return (\r\n      <div className='bankListBack'>\r\n        <div className='bankListDiv'>\r\n          {BANKS.map(bank => \r\n            (<div className='bankList' key={bank} onClick={() => this._selectBank(bank)}><span>{bank}</span></div>))\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  _selectBank = bank => {\r\n    this.setState({ bank, isBankList : false })\r\n    localStorage.setItem('bank', bank)\r\n  }\r\n  \r\n  _submit = async () => {\r\n    const { bank } = this.state\r\n    const address = this.addressInput.current.value\r\n    try{\r\n      const receiver = await this.props.info.contract.checkAccount.call(bank, address, { from : this.props.info.accounts[0] })\r\n      localStorage.setItem('receiver', receiver)\r\n      localStorage.setItem('receiverAddress', address)\r\n      this.props.history.push('/entermoney/remit')\r\n    } catch(error) {\r\n      console.log(error)\r\n    }\r\n\r\n  }\r\n  render() {\r\n    const { bank, isBankList } = this.state\r\n    const { redirect, logout } = this.props\r\n    const { _getBankList, _submit } = this\r\n    const isLogin = localStorage.getItem('isLogin')\r\n\r\n    return ( \r\n      <div className='remit'>\r\n        {isLogin !== \"true\" && redirect()}\r\n        {isBankList === true ? _getBankList() : ''}\r\n\r\n        <div className='selectBank' onClick={() => this.setState({ isBankList : true })}>\r\n          <span>{bank === '' ? '은행선택' : `${bank}`}</span>\r\n        </div>\r\n        <div>\r\n          <input \r\n            ref={this.addressInput}\r\n            className='addressInput' \r\n            placeholder='Input receiver wallet address' \r\n          ></input>\r\n        </div>\r\n\r\n        <div className=\"submitDiv\">\r\n          <div className=\"submitButton confirmButton\" onClick={_submit}>\r\n            <span>확 인</span>\r\n          </div>\r\n          <div className=\"submitButton cancelButton\" onClick={logout}>\r\n            <span>취 소</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Remit)"]},"metadata":{},"sourceType":"module"}