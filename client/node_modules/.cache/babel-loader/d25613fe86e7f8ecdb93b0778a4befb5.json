{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\src\\\\component\\\\ViewTransactions.js\";\nimport React, { Component, Fragment } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { getTransaction } from '../DB/DB';\n\nvar ViewTransactions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewTransactions, _Component);\n\n  function ViewTransactions() {\n    _classCallCheck(this, ViewTransactions);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ViewTransactions).apply(this, arguments));\n  }\n\n  _createClass(ViewTransactions, [{\n    key: \"render\",\n    value: function render() {\n      var userAddress = this.props.info.userAddress;\n      var transactions = undefined;\n\n      if (userAddress === null) {\n        console.log('고객 정보가 없습니다.');\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        });\n      } else {\n        transactions = getTransaction(userAddress);\n        console.log(transactions);\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"\\uB0A0\\uC9DC\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"\\uB0B4\\uC6A9\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"\\uCD9C\\uAE08\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"\\uC785\\uAE08\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"\\uC794\\uC561\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, transactions.map(function (transaction, index) {\n        var purpose = transaction.purpose,\n            date = transaction.date,\n            balance = transaction.balance,\n            amount = transaction.amount;\n        var splitedDate = date.split(' ')[0].split('.');\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"\".concat(splitedDate[1], \"/\").concat(splitedDate[2])), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, purpose), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, purpose === '입금' && 0, purpose === '출금' && amount), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, purpose === '입금' && amount, purpose === '출금' && 0), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, balance)));\n      }))));\n    }\n  }]);\n\n  return ViewTransactions;\n}(Component);\n\nexport default withRouter(ViewTransactions);","map":{"version":3,"sources":["c:\\Users\\judam\\Documents\\HJ\\dev\\truffle_react\\client\\src\\component\\ViewTransactions.js"],"names":["React","Component","Fragment","withRouter","Redirect","getTransaction","ViewTransactions","userAddress","props","info","transactions","undefined","console","log","map","transaction","index","purpose","date","balance","amount","splitedDate","split"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,kBAArC;AAEA,SAASC,cAAT,QAA+B,UAA/B;;IAEMC,gB;;;;;;;;;;;;;6BACK;AAAA,UACCC,WADD,GACiB,KAAKC,KAAL,CAAWC,IAD5B,CACCF,WADD;AAGP,UAAIG,YAAY,GAAGC,SAAnB;;AAEA,UAAGJ,WAAW,KAAK,IAAnB,EAAyB;AACvBK,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAHD,MAGO;AACLH,QAAAA,YAAY,GAAGL,cAAc,CAACE,WAAD,CAA7B;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACD;;AAED,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,CADF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCA,YAAY,CAACI,GAAb,CAAiB,UAACC,WAAD,EAAcC,KAAd,EAAwB;AAAA,YAChCC,OADgC,GACGF,WADH,CAChCE,OADgC;AAAA,YACvBC,IADuB,GACGH,WADH,CACvBG,IADuB;AAAA,YACjBC,OADiB,GACGJ,WADH,CACjBI,OADiB;AAAA,YACRC,MADQ,GACGL,WADH,CACRK,MADQ;AAExC,YAAMC,WAAW,GAAGH,IAAI,CAACI,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmBA,KAAnB,CAAyB,GAAzB,CAApB;AAEA,eACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAI,UAAA,GAAG,EAAEN,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAQK,WAAW,CAAC,CAAD,CAAnB,cAA0BA,WAAW,CAAC,CAAD,CAArC,EADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKJ,OAAL,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,OAAO,KAAK,IAAZ,IAAoB,CADvB,EAEGA,OAAO,KAAK,IAAZ,IAAoBG,MAFvB,CAHF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGH,OAAO,KAAK,IAAZ,IAAoBG,MADvB,EAEGH,OAAO,KAAK,IAAZ,IAAoB,CAFvB,CAPF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKE,OAAL,CAXF,CADF,CADF;AAiBD,OArBA,CADD,CAVF,CADF,CADF;AAuCD;;;;EArD4BlB,S;;AAwD/B,eAAeE,UAAU,CAACG,gBAAD,CAAzB","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { withRouter, Redirect } from 'react-router-dom'\r\n\r\nimport { getTransaction } from '../DB/DB'\r\n\r\nclass ViewTransactions extends Component {\r\n  render() {\r\n    const { userAddress } = this.props.info\r\n\r\n    let transactions = undefined\r\n\r\n    if(userAddress === null) {\r\n      console.log('고객 정보가 없습니다.')\r\n      return <Redirect to='/' />\r\n    } else {\r\n      transactions = getTransaction(userAddress)\r\n      console.log(transactions)\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>날짜</th>\r\n              <th>내용</th>\r\n              <th>출금</th>\r\n              <th>입금</th>\r\n              <th>잔액</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {transactions.map((transaction, index) => {\r\n            const { purpose, date, balance, amount } = transaction\r\n            const splitedDate = date.split(' ')[0].split('.')\r\n\r\n            return (\r\n              <Fragment>\r\n                <tr key={index}>\r\n                  <td>{`${splitedDate[1]}/${splitedDate[2]}`}</td>\r\n                  <td>{purpose}</td>\r\n                  <td>\r\n                    {purpose === '입금' && 0}\r\n                    {purpose === '출금' && amount}\r\n                  </td>\r\n                  <td>\r\n                    {purpose === '입금' && amount}\r\n                    {purpose === '출금' && 0}\r\n                  </td>\r\n                  <td>{balance}</td>\r\n                </tr>\r\n              </Fragment>\r\n            )\r\n          })}\r\n          </tbody>\r\n        </table>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ViewTransactions)"]},"metadata":{},"sourceType":"module"}