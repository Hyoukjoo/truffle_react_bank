{"ast":null,"code":"import _regeneratorRuntime from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\judam\\\\Documents\\\\HJ\\\\dev\\\\truffle_react\\\\client\\\\src\\\\component\\\\Submit.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport '../css/Submit.css';\n\nvar Submit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Submit, _Component);\n\n  function Submit(props) {\n    var _this;\n\n    _classCallCheck(this, Submit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Submit).call(this, props));\n\n    _this.componentWillMount = function () {\n      var amount = 0;\n      var purpose = _this.props.match.params.purpose;\n\n      if (purpose === 'deposit') {\n        var fifty = parseInt(localStorage.getItem('fifty'), 10) * 50000;\n        var ten = parseInt(localStorage.getItem('ten'), 10) * 10000;\n        var five = parseInt(localStorage.getItem('five'), 10) * 5000;\n        var one = parseInt(localStorage.getItem('one'), 10) * 1000;\n        amount = fifty + ten + five + one;\n      } else if (purpose === 'withdraw') {\n        amount = localStorage.getItem('withdraw_sum');\n      } else if (purpose === 'remit') {\n        amount = localStorage.getItem('remit_amount');\n      }\n\n      _this.setState({\n        amount: amount\n      });\n    };\n\n    _this._submit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$state, bankAccount, amount, contract, purpose, receiverAddress, date, balance;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, bankAccount = _this$state.bankAccount, amount = _this$state.amount, contract = _this$state.contract;\n              purpose = _this.props.match.params.purpose;\n              receiverAddress = localStorage.getItem('receiverAddress');\n\n              if (!isNaN(amount)) {\n                _context.next = 7;\n                break;\n              }\n\n              console.log(\"숫자만 입력할 수 있습니다.\");\n              _context.next = 53;\n              break;\n\n            case 7:\n              if (!(amount === 0)) {\n                _context.next = 11;\n                break;\n              }\n\n              console.log('금액을 입력하세요');\n              _context.next = 53;\n              break;\n\n            case 11:\n              if (!(purpose !== '')) {\n                _context.next = 53;\n                break;\n              }\n\n              _context.prev = 12;\n              _context.t0 = purpose;\n              _context.next = _context.t0 === 'deposit' ? 16 : _context.t0 === 'withdraw' ? 19 : _context.t0 === 'remit' ? 22 : 25;\n              break;\n\n            case 16:\n              _context.next = 18;\n              return contract.deposit(amount, {\n                from: bankAccount\n              });\n\n            case 18:\n              return _context.abrupt(\"break\", 26);\n\n            case 19:\n              _context.next = 21;\n              return contract.withdraw(amount, {\n                from: bankAccount\n              });\n\n            case 21:\n              return _context.abrupt(\"break\", 26);\n\n            case 22:\n              _context.next = 24;\n              return contract.remit(amount, receiverAddress, {\n                from: bankAccount\n              });\n\n            case 24:\n              return _context.abrupt(\"break\", 26);\n\n            case 25:\n              return _context.abrupt(\"break\", 26);\n\n            case 26:\n              if (!(purpose === 'deposit')) {\n                _context.next = 31;\n                break;\n              }\n\n              _context.next = 29;\n              return contract.deposit(amount, {\n                from: bankAccount\n              });\n\n            case 29:\n              _context.next = 39;\n              break;\n\n            case 31:\n              if (!(purpose === 'withdraw')) {\n                _context.next = 36;\n                break;\n              }\n\n              _context.next = 34;\n              return contract.withdraw(amount, {\n                from: bankAccount\n              });\n\n            case 34:\n              _context.next = 39;\n              break;\n\n            case 36:\n              if (!(purpose === 'remit')) {\n                _context.next = 39;\n                break;\n              }\n\n              _context.next = 39;\n              return contract.remit(amount, receiverAddress, {\n                from: bankAccount\n              });\n\n            case 39:\n              //Set date in state \n              _this._getDate();\n\n              date = _this.state.date; //Set balance in state\n\n              _context.next = 43;\n              return contract.getBalance();\n\n            case 43:\n              balance = _context.sent;\n              //Set amount, balance, date in localStorage\n              localStorage.setItem('amount', amount);\n              localStorage.setItem('balance', balance);\n              localStorage.setItem('date', date);\n\n              _this.props.history.push(\"/statement/\".concat(purpose));\n\n              _context.next = 53;\n              break;\n\n            case 50:\n              _context.prev = 50;\n              _context.t1 = _context[\"catch\"](12);\n              console.log(_context.t1);\n\n            case 53:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[12, 50]]);\n    }));\n\n    _this._getDate = function () {\n      var date = new Date();\n      var year = date.getFullYear();\n      var month = (\"0\" + (date.getMonth() + 1)).slice(-2);\n      var day = (\"0\" + date.getDate()).slice(-2);\n      var hours = (\"0\" + date.getHours()).slice(-2);\n      var minutes = (\"0\" + date.getMinutes()).slice(-2);\n      var seconds = (\"0\" + date.getSeconds()).slice(-2);\n\n      _this.setState({\n        date: \"\".concat(year, \".\").concat(month, \".\").concat(day, \" \").concat(hours, \":\").concat(minutes, \":\").concat(seconds)\n      });\n    };\n\n    _this._checkPurpose = function () {\n      var receiver = localStorage.getItem('receiver');\n      var purpose = _this.props.match.params.purpose;\n\n      switch (purpose) {\n        case 'deposit':\n          return \"입금할 금액이 맞습니까 ?\";\n\n        case 'withdraw':\n          return \"출금할 금액이 맞습니까 ?\";\n\n        case 'remit':\n          return \"\".concat(receiver, \"\\uB2D8\\uAED8 \\uC1A1\\uAE08\\uD560 \\uAE08\\uC561\\uC774 \\uB9DE\\uC2B5\\uB2C8\\uAE4C ?\");\n\n        default:\n          break;\n      }\n    };\n\n    _this.state = {\n      contract: _this.props.info.contract,\n      bankAccount: _this.props.info.accounts[0],\n      amount: 0,\n      date: ''\n    };\n    return _this;\n  }\n\n  _createClass(Submit, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          redirect = _this$props.redirect,\n          logout = _this$props.logout;\n      var _checkPurpose = this._checkPurpose,\n          _submit = this._submit;\n      var isLogin = localStorage.getItem('isLogin');\n      var inThousandsAmount = this.state.amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return React.createElement(\"div\", {\n        className: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, isLogin !== \"true\" && redirect(), React.createElement(\"p\", {\n        className: \"checkAmount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, _checkPurpose()), React.createElement(\"div\", {\n        style: {\n          marginTop: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"\\uFFE6 \", inThousandsAmount)), React.createElement(\"div\", {\n        className: \"submitDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"submitButton confirmButton\",\n        onClick: _submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"\\uD655 \\uC778\")), React.createElement(\"div\", {\n        className: \"submitButton cancelButton\",\n        onClick: logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"\\uCDE8 \\uC18C\")))));\n    }\n  }]);\n\n  return Submit;\n}(Component);\n\nexport default withRouter(Submit);","map":{"version":3,"sources":["c:\\Users\\judam\\Documents\\HJ\\dev\\truffle_react\\client\\src\\component\\Submit.js"],"names":["React","Component","withRouter","Submit","props","componentWillMount","amount","purpose","match","params","fifty","parseInt","localStorage","getItem","ten","five","one","setState","_submit","state","bankAccount","contract","receiverAddress","isNaN","console","log","deposit","from","withdraw","remit","_getDate","date","getBalance","balance","setItem","history","push","Date","year","getFullYear","month","getMonth","slice","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","_checkPurpose","receiver","info","accounts","redirect","logout","isLogin","inThousandsAmount","toString","replace","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport '../css/Submit.css'\r\n\r\nclass Submit extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      contract : this.props.info.contract,\r\n      bankAccount : this.props.info.accounts[0],\r\n      amount : 0,\r\n      date : ''\r\n    }\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    let amount = 0\r\n    const { purpose } = this.props.match.params\r\n    if(purpose === 'deposit'){\r\n      const fifty = parseInt(localStorage.getItem('fifty'), 10) * 50000\r\n      const ten = parseInt(localStorage.getItem('ten'), 10) * 10000\r\n      const five = parseInt(localStorage.getItem('five'), 10) * 5000\r\n      const one = parseInt(localStorage.getItem('one'), 10) * 1000\r\n      \r\n      amount = fifty + ten + five + one\r\n    } else if(purpose === 'withdraw') {\r\n      amount = localStorage.getItem('withdraw_sum')\r\n    } else if(purpose === 'remit') {\r\n      amount = localStorage.getItem('remit_amount')\r\n    }\r\n\r\n    this.setState({ amount })\r\n  }\r\n\r\n  _submit = async () => {\r\n    const { bankAccount, amount, contract } = this.state\r\n    const { purpose } = this.props.match.params\r\n    const receiverAddress = localStorage.getItem('receiverAddress')\r\n    \r\n    if(isNaN(amount)) console.log(\"숫자만 입력할 수 있습니다.\") \r\n    else if(amount === 0) console.log('금액을 입력하세요')\r\n    else if(purpose !== '')\r\n      try{\r\n        //Call deposit or withdraw from constant according to the purpose\r\n        switch(purpose) {\r\n          case 'deposit' : \r\n            await contract.deposit(amount, { from : bankAccount }) \r\n            break\r\n          case 'withdraw' : \r\n            await contract.withdraw(amount, { from : bankAccount }) \r\n            break\r\n          case 'remit' : \r\n            await contract.remit(amount, receiverAddress, { from : bankAccount }) \r\n            break\r\n          default : break\r\n        }\r\n\r\n        if(purpose === 'deposit')\r\n          await contract.deposit(amount, { from : bankAccount })\r\n        else if(purpose === 'withdraw')\r\n          await contract.withdraw(amount, { from : bankAccount })\r\n        else if(purpose === 'remit')\r\n          await contract.remit(amount, receiverAddress, { from : bankAccount })\r\n\r\n        //Set date in state \r\n        this._getDate()\r\n        const { date } = this.state\r\n\r\n        //Set balance in state\r\n        const balance = await contract.getBalance()\r\n\r\n        //Set amount, balance, date in localStorage\r\n        localStorage.setItem('amount', amount)\r\n        localStorage.setItem('balance', balance)\r\n        localStorage.setItem('date', date)\r\n\r\n        this.props.history.push(`/statement/${purpose}`)\r\n      } catch(error) {\r\n        console.log(error)\r\n      }\r\n  }\r\n\r\n  _getDate = () => {\r\n    const date = new Date()\r\n    const year = date.getFullYear()\r\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2)\r\n    const day = (\"0\" + date.getDate()).slice(-2)\r\n    const hours = (\"0\" + date.getHours()).slice(-2)\r\n    const minutes = (\"0\" + date.getMinutes()).slice(-2)\r\n    const seconds = (\"0\" + date.getSeconds()).slice(-2)\r\n    this.setState({ date : `${year}.${month}.${day} ${hours}:${minutes}:${seconds}` })\r\n  }\r\n\r\n  _checkPurpose = () => {\r\n    const receiver = localStorage.getItem('receiver')\r\n    const { purpose } = this.props.match.params\r\n\r\n    switch (purpose) {\r\n      case 'deposit': return \"입금할 금액이 맞습니까 ?\"\r\n      case 'withdraw' : return \"출금할 금액이 맞습니까 ?\"\r\n      case 'remit' : return `${receiver}님께 송금할 금액이 맞습니까 ?`\r\n      default : break\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const { redirect, logout } = this.props\r\n    const { _checkPurpose, _submit } = this\r\n    const isLogin = localStorage.getItem('isLogin')\r\n    const inThousandsAmount = this.state.amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n\r\n    return(\r\n      <div className=\"submit\">\r\n        {isLogin !== \"true\" && redirect()}\r\n\r\n        <p className='checkAmount'>{_checkPurpose()}</p>\r\n\r\n        <div style={{ marginTop:\"30px\" }}>\r\n          <div className=\"amount\">\r\n            <span>￦ {inThousandsAmount}</span>\r\n          </div>\r\n\r\n          <div className=\"submitDiv\">\r\n            <div className=\"submitButton confirmButton\" onClick={_submit}>\r\n              <span>확 인</span>\r\n            </div>\r\n            <div className=\"submitButton cancelButton\" onClick={logout}>\r\n              <span>취 소</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Submit)"]},"metadata":{},"sourceType":"module"}