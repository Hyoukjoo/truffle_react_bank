{"ast":null,"code":"import { Kane, Trout, Kershow, Johnson } from './UserInfo';\nvar USERS = new Map();\nvar BANKS = ['TRUFFLE', 'KB', 'WOORI', 'SINHAN', 'KAKAO', 'K BANK', 'IDK', 'SC', 'CITY', 'KEB'];\n\nvar insertTransaction = function insertTransaction(userAddress, transaction) {\n  USERS.get(userAddress).transactions.push(transaction);\n};\n\nvar getTransaction = function getTransaction(userAddress) {\n  return USERS.get(userAddress).transactions;\n};\n\nvar insertUser = function insertUser(userAddress, userInfo) {\n  return USERS.set(userAddress, userInfo);\n};\n\nexport { USERS, BANKS, insertTransaction, getTransaction, insertUser };","map":{"version":3,"sources":["C:\\Users\\judam\\Documents\\HJ\\dev\\truffle_react\\client\\src\\DB\\DB.js"],"names":["Kane","Trout","Kershow","Johnson","USERS","Map","BANKS","insertTransaction","userAddress","transaction","get","transactions","push","getTransaction","insertUser","userInfo","set"],"mappings":"AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,OAA/B,QAA8C,YAA9C;AAEA,IAAMC,KAAK,GAAG,IAAIC,GAAJ,EAAd;AAEA,IAAMC,KAAK,GAAG,CACV,SADU,EACC,IADD,EACO,OADP,EACgB,QADhB,EAC0B,OAD1B,EACmC,QADnC,EAC6C,KAD7C,EACoD,IADpD,EAC0D,MAD1D,EACkE,KADlE,CAAd;;AAIA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,WAAD,EAAcC,WAAd,EAA8B;AACtDL,EAAAA,KAAK,CAACM,GAAN,CAAUF,WAAV,EAAuBG,YAAvB,CAAoCC,IAApC,CAAyCH,WAAzC;AACD,CAFD;;AAIA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAAAL,WAAW;AAAA,SAAIJ,KAAK,CAACM,GAAN,CAAUF,WAAV,EAAuBG,YAA3B;AAAA,CAAlC;;AAEA,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACN,WAAD,EAAcO,QAAd;AAAA,SAA2BX,KAAK,CAACY,GAAN,CAAUR,WAAV,EAAuBO,QAAvB,CAA3B;AAAA,CAAnB;;AAEA,SAASX,KAAT,EAAgBE,KAAhB,EAAuBC,iBAAvB,EAA0CM,cAA1C,EAA0DC,UAA1D","sourcesContent":["import { Kane, Trout, Kershow, Johnson } from './UserInfo'\r\n\r\nconst USERS = new Map()\r\n\r\nconst BANKS = [\r\n    'TRUFFLE', 'KB', 'WOORI', 'SINHAN', 'KAKAO', 'K BANK', 'IDK', 'SC', 'CITY', 'KEB'\r\n]\r\n\r\nconst insertTransaction = (userAddress, transaction) => {\r\n  USERS.get(userAddress).transactions.push(transaction)\r\n}\r\n\r\nconst getTransaction = userAddress => USERS.get(userAddress).transactions\r\n\r\nconst insertUser = (userAddress, userInfo) => USERS.set(userAddress, userInfo)\r\n\r\nexport { USERS, BANKS, insertTransaction, getTransaction, insertUser }"]},"metadata":{},"sourceType":"module"}